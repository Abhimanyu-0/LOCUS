<launch>
  <arg name="robot_namespace" default="robot"/>

  <!-- Velodyne topic throttle params -->
  <arg name="vlp_throttle_freq" default="5.0"/><!-- Hz -->

  <!-- Map processing params -->
  <arg name="process_map" default="true"/>
  <arg name="map_update_freq" default="1.0"/><!-- Hz -->
  <arg name="map_topic_input" default="lo_frontend/octree_map"/>
  <arg name="map_topic_output" default="lo_frontend/octree_map_downsampled"/>

  <!-- optional filename of the zip archive of a pose graph to be loaded -->
  <arg name="load_pose_graph_file" default="" /> 

  <group ns="$(arg robot_namespace)">
    <!-- SLAM -->
    <node pkg="lo_frontend"
          name="lo_frontend"
          type="lo_frontend_node"
          output="screen">

      <!-- Load graph -->
      <param name="load_graph" value="$(arg load_pose_graph_file)"/>

      <!-- Topics -->
      <remap from="~pcld" to="velodyne_points/transformed"/>
      <remap from="~artifact" to="~artifact_global" />
      <remap from="~artifact_relative" to="artifact_reconciliation/reconciled_artifact" />
      <remap from="~uwb_signal" to="comm/uwb/anchor" />

      <!-- Serives -->
      <remap from="~drop_uwb_anchor" to="drop_uwb_anchor"/>

      <!-- Initial pose -->
      <rosparam param="init">
        position: {x: 0.0, y: 0.0, z: 0.0}
        orientation: {roll: 0.0, pitch: 0.0, yaw: 0.0}
        position_sigma: {x: 0.316, y: 0.316, z: 0.316}
        orientation_sigma: {roll: 0.141, pitch: 0.141, yaw: 0.141}
      </rosparam>

      <!-- Noise parameters -->
      <rosparam param="noise">
        odom_position_sigma: 0.6324
        odom_attitude_sigma: 0.316
      </rosparam>      

      <!-- Rates -->
      <rosparam file="$(find blam_example)/config/blam_rates.yaml"/>

      <!-- Frames -->
      <rosparam file="$(find blam_example)/config/blam_frames.yaml" subst_value="true"/>

      <!-- Point cloud filter -->
      <rosparam file="$(find point_cloud_filter)/config/parameters.yaml"/>

      <!-- Point cloud odometry -->
      <rosparam file="$(find point_cloud_odometry)/config/parameters.yaml"/>

      <!-- Point cloud localization -->
      <rosparam file="$(find point_cloud_localization)/config/parameters.yaml"/>

      <!-- Point cloud mapper -->
      <rosparam file="$(find point_cloud_mapper)/config/parameters.yaml"/>

      <!-- Point cloud visualization -->
      <rosparam file="$(find point_cloud_visualizer)/config/parameters.yaml"/>

      <!-- Loop closure -->
      <rosparam file="$(find laser_loop_closure)/config/parameters.yaml"/>


    </node>

    <!-- Trotthling input cloud -->
    <node name="point_cloud_throttler" type="throttle" pkg="topic_tools" args="messages velodyne_points $(arg vlp_throttle_freq)">
    </node>
 

    <!-- Republish node with different frame_id -->
    <node pkg="nodelet" type="nodelet" name="transform_points_base_link"
          args="standalone pcl/PassThrough">
      <remap from="~input" to="velodyne_points"/>
      <!--<remap from="~input" to="velodyne_points_throttle"/> -->
      <remap from="~output" to="velodyne_points/transformed"/>
      <rosparam subst_value="true">
        filter_field_name: z
        filter_limit_min: -100
        filter_limit_max: 100
        output_frame: $(arg robot_namespace)/base_link
      </rosparam>
    </node>


  </group>

</launch>
